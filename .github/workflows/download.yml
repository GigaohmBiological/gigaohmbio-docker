name: Download
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  download:

    runs-on: ubuntu-latest

    env:
      BRANCH_REF: ${{ github.head_ref || github.ref }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_REF }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Action Variables
        id: avars
        shell: bash
        run: |
          echo "hostuser=`id -u`" >> $GITHUB_OUTPUT
          echo "hostgroup=`id -g`" >> $GITHUB_OUTPUT
          echo "datapath=data/`date +%Y%m%d-%H%M%S`" >> $GITHUB_OUTPUT
          echo "previousurl=$(cat `ls -lARrt **/**/latest-video-url.txt | tail -1 | awk '{print $9}'`)" >> $GITHUB_OUTPUT

      - name: Setup and Audit
        shell: bash
        run: |
          echo "hostuser=${{ steps.avars.outputs.hostuser }}"
          echo "hostgroup=${{ steps.avars.outputs.hostgroup }}"
          echo "datapath=${{ steps.avars.outputs.datapath }}"
          echo "previousurl=${{ steps.avars.outputs.previousurl }}"
          echo "***"
          ls -lARrt **/**/latest-video-url.txt
          echo "***"
          ls -lARrt **/**/latest-video-url.txt | tail -1
          echo *** ALT METHOD
          echo "***"
           ls -ltR **/**/latest-video-url.txt
          echo "***"
            ls -ltR **/**/latest-video-url.txt | head -1
          echo "***"
          mkdir -p ${{ steps.avars.outputs.datapath }}

      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "Dockerfile-download"
          load: true
          tags: gigaohmbio-download:latest
          push: false
          build-args: |
            UID=${{ steps.avars.outputs.hostuser }}
            GID=${{ steps.avars.outputs.hostgroup }}

      - name: Docker Run
        uses: tj-actions/docker-run@v2
        with:
          image: gigaohmbio-download:latest
          name: gigaohmbio-download-1
          options: -v ${{ github.workspace }}/${{ steps.avars.outputs.datapath }}:/home/pn/app/data
          args: ${{ steps.avars.outputs.previousurl }}
      
      - name: Verify
        id: verify
        shell: bash
        run: |
          ls -l ${{ github.workspace }}/${{ steps.avars.outputs.datapath }}
          test `tail -1 ${{ github.workspace }}/${{ steps.avars.outputs.datapath }}/log.txt` = "DOWNLOAD_OK"
          if [ $? -eq 0 ]; then
            echo ***
            echo PROCEED
            echo ***
            echo "audiofile="$(echo "$(tail -2 ${{ github.workspace }}/${{ steps.avars.outputs.datapath }}/log.txt)" | head -n 1)"" >> $GITHUB_OUTPUT
          else
            echo ***
            echo CANCELLED
            echo ***
            gh run cancel ${{ github.run_id }}
            exit 4120
          fi
      
      - name: Download Output
        id: dl_output
        shell: bash
        run: |
          echo "audiopath=${{ github.workspace }}/${{ steps.avars.outputs.datapath }}/${{ steps.verify.outputs.audiofile }}" >> $GITHUB_OUTPUT
      
      - name: Whisper
        shell: bash
        run: echo "Placeholder whisper step"
#        uses: appleboy/whisper-action@v0.1.1
#        with:
#          model: small
#          audio_path: ${{ steps.dl_output.outputs.audiopath }}
#          output_format: txt
#          output_folder: ${{ github.workspace }}/${{ steps.avars.outputs.datapath }}
#          print_segment: true
#          debug: true
      
#      - name: Commit Updates
#        shell: bash
#        run: |
#          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#          git config --local user.name "github-actions[bot]"
#          git add ${{ steps.avars.outputs.datapath }}
#          git commit -m "Update ${{ steps.avars.outputs.datapath }}"

#      - name: Push Changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: ${{ env.BRANCH_REF }}